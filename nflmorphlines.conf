SOLR_LOCATOR : {
 
  # Name of solr collection
  collection : NFL-Collection
 
  # ZooKeeper ensemble -- edit this for your cluster's Zk hostname(s)
  zkHost : "demo2-1.mtv.cloudera.com:2181"

  # The maximum number of documents to send to Solr per network batch (throughput knob)
  # batchSize : 1000
}
 
morphlines : [
  {
    id : loadNFLtoSolr
    importCommands : ["com.cloudera.**", "org.apache.solr.**"]
 
    commands : [
 
     # Read the CSV data
     {
        readCSV {
          separator : "\u0001"
          columns : ["game", "quarter", "gameminutes", "gameseconds", "offense", "defense", "down", "yardstogo", "yardline", "playdesc", "offensescore", "defensescore", "year", "qb", "offensiveplayer", "defensiveplayer1", "defensiveplayer2", "penalty", "fumble", "incomplete", "isgoalgood", "playtype", "hometeam", "awayteam", "dateplayed", "playid", "winner", "hometeamscore", "awayteamscore", "playerarrested", "offenseplayerarrested", "defenseplayerarrested", "hometeamplayerarrested", "awayteamplayerarrested", "stadium", "capacity", "expandedcapacity", "stadiumlocation", "playingsurface", "isartificial", "team", "opened", "weatherstation", "rooftype", "elevation", "station", "station_name", "readingdate", "mdpr", "mdsf", "dapr", "prcp", "snwd", "snow", "psun", "tsun", "tmax", "tmin", "tobs", "wesd", "wesf", "awnd", "wdf2", "wdf5", "wdfg", "wsf2", "wsf5", "wsfg", "pgtm", "fmtm", "wv07", "wv01", "wv20", "wv03", "wt09", "wt14", "wt07", "wt01", "wt15", "wt17", "wt06", "wt21", "wt05", "wt02", "wt11", "wt22", "wt04", "wt13", "wt16", "wt08", "wt18", "wt03", "wt10", "wt19", "hasweatherinvicinity", "hasweathertype", "hasweather", "drive", "play", "driveresult", "maxplays"]
          ignoreFirstLine : false
          trim : false
          charset : UTF-8
        }
      }
 
      # Replace "*" salary data with a numeric value
      {
        if {
          conditions : [
            { contains { down : ["1","2","3","4"] } }
          ]
             then : [
            { logDebug { format : "Converting non-numeric salary to 0"  } }
            { setValues { down : "0" } }
            ]
        }
	}
      { logDebug { format : "output record {}", args : ["@{}"] } }
 
 
      { sanitizeUnknownSolrFields { solrLocator : ${SOLR_LOCATOR} } }
 
      # load the record into a Solr server or MapReduce Reducer.
      { loadSolr { solrLocator : ${SOLR_LOCATOR} } }
 
    ]
  }
]
